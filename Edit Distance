Given two strings word1 and word2, return the minimum number of operations required to convert word1 to word2.

You have the following three operations permitted on a word:

Insert a character
Delete a character
Replace a character

class Solution {
public:
    int minDistance(string word1, string word2) {
        int m=word1.size();
        int n=word2.size();
        vector<vector<int>> ans(m+1,vector<int>(n+1,0));
        for(int i=0;i<m+1;i++){
            ans[i][0]=i;
        }
        for(int i=0;i<n+1;i++){
            ans[0][i]=i;
        }
        for(int i=1;i<m+1;i++){
            for(int j=1;j<n+1;j++){
                if(word1[m-i]==word2[n-j]){
                    ans[i][j]=ans[i-1][j-1];
                }
                else{
                    ans[i][j]=min(ans[i][j-1],min(ans[i-1][j], ans[i-1][j-1]))+1;
                }
            }
        }
        return ans[m][n];
    }
};
